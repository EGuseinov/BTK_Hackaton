import os

# Proje yapÄ±sÄ±: KlasÃ¶rler ve iÃ§erecekleri dosyalar
PROJECT_STRUCTURE = {
    ".env": "# .env dosyasÄ±\nGEMINI_API_KEY=\"BURAYA_API_ANAHTARINIZI_YAPISTIRIN\"",
    
    "requirements.txt": """Flask
google-generativeai
python-dotenv
Pillow
""",
    
    "app.py": """import os
import json
import google.generativeai as genai
from flask import Flask, render_template, request, jsonify
from dotenv import load_dotenv
from PIL import Image

# .env dosyasÄ±ndaki API anahtarÄ±nÄ± yÃ¼kle
load_dotenv()
genai.configure(api_key=os.getenv("GEMINI_API_KEY"))

app = Flask(__name__)

# ÃœrÃ¼n veritabanÄ±nÄ± yÃ¼kle
with open('products.json', 'r', encoding='utf-8') as f:
    products_db = json.load(f)

# Gemini Modellerini BaÅŸlat
vision_model = genai.GenerativeModel('gemini-1.5-pro-latest')
text_model = genai.GenerativeModel('gemini-pro')

# --- Sayfa RotalarÄ± ---

@app.route('/')
def index():
    return render_template('index.html')

@app.route('/siparislerim')
def siparislerim():
    # Demo sipariÅŸ verisi
    dummy_orders = [
        {"id": "TR12345", "product": "Lacivert Blazer Ceket", "status": "Teslim Edildi"},
        {"id": "TR67890", "product": "Beyaz GÃ¶mlek", "status": "Teslim Edildi"}
    ]
    return render_template('siparislerim.html', orders=dummy_orders)

@app.route('/satici-paneli')
def satici_paneli():
    # Bu rapor, gerÃ§ek bir senaryoda toplanan verilerle periyodik olarak Gemini'ye Ã¼rettirilir.
    # Hackathon iÃ§in demo amaÃ§lÄ± statik iÃ§erik gÃ¶steriyoruz.
    return render_template('satici_paneli.html')

# --- API RotalarÄ± ---

@app.route('/api/analyze-style', methods=['POST'])
def analyze_style():
    if 'file' not in request.files:
        return jsonify({"error": "Resim dosyasÄ± bulunamadÄ±"}), 400

    file = request.files['file']
    img = Image.open(file.stream)

    try:
        # Gemini Vision'a gÃ¶nderilecek prompt
        prompt = '''
        Bu resimdeki giysi veya mobilyayÄ± analiz et. 
        Bana aÅŸaÄŸÄ±daki formatta bir JSON Ã§Ä±ktÄ±sÄ± ver:
        {
          "item_description": "Ã–rnek: Lacivert, yÃ¼nlÃ¼, slim-fit bir blazer ceket",
          "style_tags": ["klasik", "minimalist", "ofis"],
          "color_tags": ["lacivert", "koyu mavi", "mavi"],
          "dominant_color_name": "lacivert"
        }
        Sadece JSON kodunu dÃ¶ndÃ¼r, baÅŸka hiÃ§bir metin ekleme.
        '''
        response = vision_model.generate_content([prompt, img])
        
        # Gemini'den gelen yanÄ±tÄ± temizleyip JSON'a Ã§evir
        analysis_json_text = response.text.strip().replace("```json", "").replace("```", "")
        analysis_data = json.loads(analysis_json_text)
        
        # ÃœrÃ¼n veritabanÄ±nda uyumlu Ã¼rÃ¼nleri bul
        matched_products = []
        style_tags = set(analysis_data.get("style_tags", []))
        color_tags = set(analysis_data.get("color_tags", []))
        
        for product in products_db:
            product_style_tags = set(product.get("style_tags", []))
            # Basit bir eÅŸleÅŸtirme mantÄ±ÄŸÄ±: En az bir stil etiketi eÅŸleÅŸiyorsa uyumlu kabul et
            if style_tags.intersection(product_style_tags):
                matched_products.append(product)

        if not matched_products:
            return jsonify({"error": "VeritabanÄ±mÄ±zda bu stile uygun Ã¼rÃ¼n bulamadÄ±k."}), 404
        
        # Uyumlu Ã¼rÃ¼nler iÃ§in Gemini'den stil Ã¶nerisi al
        style_prompt = f\"\"\"
        Bir kullanÄ±cÄ± dolabÄ±ndaki '{analysis_data.get('item_description')}' iÃ§in kombin Ã¶nerisi arÄ±yor.
        Ona uyumlu olarak ÅŸu Ã¼rÃ¼nleri bulduk: {[p['name'] for p in matched_products]}.
        Bu Ã¼rÃ¼nlerle ana parÃ§anÄ±n neden ÅŸÄ±k duracaÄŸÄ±nÄ± anlatan, samimi ve ikna edici bir stil Ã¶nerisi metni yaz.
        Metin, kullanÄ±cÄ±ya ilham vermeli ve bu Ã¼rÃ¼nleri satÄ±n almaya teÅŸvik etmeli.
        \"\"\"
        style_advice_response = text_model.generate_content(style_prompt)

        return jsonify({
            "original_item": analysis_data,
            "style_advice": style_advice_response.text,
            "matched_products": matched_products
        })

    except Exception as e:
        print(f"Hata: {e}")
        return jsonify({"error": "Analiz sÄ±rasÄ±nda bir hata oluÅŸtu. LÃ¼tfen tekrar deneyin."}), 500


@app.route('/api/chat', methods=['POST'])
def chat():
    data = request.json
    user_message = data.get("message")
    
    # Gemini'ye iade asistanÄ± rolÃ¼nÃ¼ ve gÃ¶revini veriyoruz
    system_prompt = \"\"\"
    Sen, 'StilDÃ¶ngÃ¼sÃ¼' adlÄ± bir e-ticaret sitesinin 'AkÄ±llÄ± Ä°ade AsistanÄ±'sÄ±n. AdÄ±n 'ReturnLogic'. 
    GÃ¶revin, mÃ¼ÅŸterinin iade sebebini nazikÃ§e anlamak ve mÃ¼mkÃ¼nse ona bir Ã§Ã¶zÃ¼m sunarak iadeyi engellemek.
    - EÄŸer sorun beden veya renk/stil uyumsuzluÄŸu ise, iadeyi baÅŸlatabileceÄŸini sÃ¶yle ama hemen ardÄ±ndan ona 'Stil ve Uyum Analisti (StyleSync)' Ã¶zelliÄŸimizi Ã¶ner. Bu Ã¶zelliÄŸin, elindeki baÅŸka bir parÃ§anÄ±n fotoÄŸrafÄ±nÄ± yÃ¼kleyerek ona %100 uyumlu Ã¼rÃ¼nler bulabileceÄŸini anlat. MÃ¼ÅŸteriyi ana sayfaya yÃ¶nlendirmek iÃ§in '[STIL_ANALISTI_LINK]' metnini kullan.
    - EÄŸer Ã¼rÃ¼n bozuksa veya farklÄ± bir sorun varsa, Ã¼zgÃ¼n olduÄŸunu belirt ve iade sÃ¼recinin baÅŸlatÄ±lacaÄŸÄ±nÄ± sÃ¶yle.
    - KonuÅŸmalarÄ±n kÄ±sa, samimi ve Ã§Ã¶zÃ¼m odaklÄ± olsun.
    \"\"\"

    try:
        response = text_model.generate_content([system_prompt, f"MÃ¼ÅŸteri: {user_message}"])
        return jsonify({"reply": response.text})
    except Exception as e:
        print(f"Chatbot HatasÄ±: {e}")
        return jsonify({"reply": "Sistemde bir sorun oluÅŸtu, lÃ¼tfen daha sonra tekrar deneyin."}), 500

if __name__ == '__main__':
    app.run(debug=True)
""",
    
    "products.json": """[
    {
        "id": 1,
        "name": "Bej Keten GÃ¶mlek",
        "price": "899.99 TL",
        "image": "static/img/gomlek1.jpg",
        "style_tags": ["bohem", "klasik", "minimalist", "gÃ¼nlÃ¼k"],
        "color_tags": ["bej", "krem", "toprak"]
    },
    {
        "id": 2,
        "name": "Siyah Chino Pantolon",
        "price": "1299.90 TL",
        "image": "static/img/pantolon1.jpg",
        "style_tags": ["klasik", "modern", "ofis", "minimalist"],
        "color_tags": ["siyah", "antrasit", "koyu"]
    },
    {
        "id": 3,
        "name": "Beyaz Deri Sneaker",
        "price": "2499.00 TL",
        "image": "static/img/ayakkabi1.jpg",
        "style_tags": ["spor", "gÃ¼nlÃ¼k", "modern", "minimalist"],
        "color_tags": ["beyaz", "krem"]
    },
    {
        "id": 4,
        "name": "ZÃ¼mrÃ¼t YeÅŸili Saten Elbise",
        "price": "1899.50 TL",
        "image": "static/img/elbise1.jpg",
        "style_tags": ["ÅŸÄ±k", "gece", "Ã¶zel gÃ¼n", "klasik"],
        "color_tags": ["yeÅŸil", "zÃ¼mrÃ¼t", "koyu yeÅŸil"]
    }
]""",

    "templates": {
        "layout.html": """<!DOCTYPE html>
<html lang="tr">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>{% block title %}StilDÃ¶ngÃ¼sÃ¼{% endblock %}</title>
    <!-- Bootstrap CSS -->
    <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.3/dist/css/bootstrap.min.css" rel="stylesheet">
    <!-- Google Fonts -->
    <link rel="preconnect" href="https://fonts.googleapis.com">
    <link rel="preconnect" href="https://fonts.gstatic.com" crossorigin>
    <link href="https://fonts.googleapis.com/css2?family=Montserrat:wght@400;500;700&display=swap" rel="stylesheet">
    <!-- Custom CSS -->
    <link rel="stylesheet" href="{{ url_for('static', filename='css/style.css') }}">
</head>
<body>

    <nav class="navbar navbar-expand-lg navbar-light bg-light shadow-sm">
        <div class="container">
            <a class="navbar-brand fw-bold" href="/">StilDÃ¶ngÃ¼sÃ¼ ğŸŒ€</a>
            <button class="navbar-toggler" type="button" data-bs-toggle="collapse" data-bs-target="#navbarNav">
                <span class="navbar-toggler-icon"></span>
            </button>
            <div class="collapse navbar-collapse" id="navbarNav">
                <ul class="navbar-nav ms-auto">
                    <li class="nav-item">
                        <a class="nav-link {% if request.path == '/' %}active{% endif %}" href="/">Stil Analisti</a>
                    </li>
                    <li class="nav-item">
                        <a class="nav-link {% if request.path == '/siparislerim' %}active{% endif %}" href="/siparislerim">SipariÅŸlerim</a>
                    </li>
                    <li class="nav-item">
                        <a class="nav-link {% if request.path == '/satici-paneli' %}active{% endif %}" href="/satici-paneli">SatÄ±cÄ± Paneli</a>
                    </li>
                </ul>
            </div>
        </div>
    </nav>

    <main class="container my-5">
        {% block content %}{% endblock %}
    </main>

    <footer class="bg-light text-center text-muted py-3 mt-5">
        <div class="container">
            <p>Â© 2025 StilDÃ¶ngÃ¼sÃ¼ - BTK Akademi Hackathon Projesi</p>
        </div>
    </footer>

    <!-- Bootstrap JS -->
    <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.3/dist/js/bootstrap.bundle.min.js"></script>
    <!-- Custom JS -->
    <script src="{{ url_for('static', filename='js/main.js') }}"></script>
</body>
</html>
""",
        "index.html": """{% extends 'layout.html' %}
{% block title %}Stil ve Uyum Analisti{% endblock %}

{% block content %}
<div class="text-center">
    <h1 class="display-5 fw-bold">Stil ve Uyum Analisti (StyleSync)</h1>
    <p class="lead text-muted">DolabÄ±nÄ±zdaki bir parÃ§anÄ±n fotoÄŸrafÄ±nÄ± yÃ¼kleyin, ona en uygun kombinleri sizin iÃ§in bulalÄ±m ve stil Ã¶nerileri sunalÄ±m.</p>
</div>

<div class="row justify-content-center mt-4">
    <div class="col-md-8">
        <div class="card p-4 styled-form-container">
            <form id="style-form">
                <div class="mb-3">
                    <label for="image-upload" class="form-label fw-bold">Kombinlemek istediÄŸiniz Ã¼rÃ¼nÃ¼n fotoÄŸrafÄ±:</label>
                    <input class="form-control" type="file" id="image-upload" name="file" accept="image/*" required>
                </div>
                <div class="d-grid">
                    <button type="submit" class="btn btn-primary btn-lg">Stilimi Analiz Et</button>
                </div>
            </form>
        </div>
    </div>
</div>

<div id="loading-spinner" class="text-center my-5 d-none">
    <div class="spinner-border text-primary" role="status">
        <span class="visually-hidden">Loading...</span>
    </div>
    <p class="mt-2">Stiliniz analiz ediliyor... Gemini sizin iÃ§in Ã§alÄ±ÅŸÄ±yor!</p>
</div>

<div id="results-container" class="mt-5">
    <!-- SonuÃ§lar buraya dinamik olarak eklenecek -->
</div>
{% endblock %}
""",
        "siparislerim.html": """{% extends 'layout.html' %}
{% block title %}SipariÅŸlerim{% endblock %}

{% block content %}
<h1 class="mb-4">SipariÅŸlerim</h1>
<div class="list-group">
    {% for order in orders %}
    <div class="list-group-item list-group-item-action d-flex justify-content-between align-items-center">
        <div>
            <h5 class="mb-1">{{ order.product }}</h5>
            <p class="mb-1">SipariÅŸ No: {{ order.id }}</p>
            <small>Durum: {{ order.status }}</small>
        </div>
        <button class="btn btn-outline-danger return-btn" 
                data-bs-toggle="modal" 
                data-bs-target="#return-chatbot-modal" 
                data-product-name="{{ order.product }}">
            Ä°ade Et
        </button>
    </div>
    {% endfor %}
</div>

<!-- ReturnLogic Chatbot Modal -->
<div class="modal fade" id="return-chatbot-modal" tabindex="-1">
    <div class="modal-dialog modal-dialog-centered">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title">ğŸŒ€ AkÄ±llÄ± Ä°ade AsistanÄ± (ReturnLogic)</h5>
                <button type="button" class="btn-close" data-bs-dismiss="modal"></button>
            </div>
            <div class="modal-body">
                <div id="chat-window" class="chat-window mb-3">
                    <!-- Mesajlar buraya eklenecek -->
                </div>
                <div id="chat-typing-indicator" class="d-none">
                    <small class="text-muted">Asistan yazÄ±yor...</small>
                </div>
                <div class="input-group">
                    <input type="text" id="chat-input" class="form-control" placeholder="MesajÄ±nÄ±zÄ± yazÄ±n...">
                    <button id="chat-send-btn" class="btn btn-primary">GÃ¶nder</button>
                </div>
            </div>
        </div>
    </div>
</div>
{% endblock %}
""",
        "satici_paneli.html": """{% extends 'layout.html' %}
{% block title %}SatÄ±cÄ± Paneli - Ä°ade Raporu{% endblock %}

{% block content %}
<h1 class="mb-4">AylÄ±k Ä°ade Analiz Raporu</h1>
<p class="text-muted">Bu rapor, <strong>Gemini</strong> tarafÄ±ndan iade konuÅŸmalarÄ± analiz edilerek otomatik olarak oluÅŸturulmuÅŸtur.</p>

<div class="card">
    <div class="card-header">
        <h5>Rapor Ã–zeti: MayÄ±s 2025</h5>
    </div>
    <div class="card-body">
        <h6 class="card-title">Genel Ä°ade Sebepleri</h6>
        <div class="progress mb-3" style="height: 25px;">
            <div class="progress-bar bg-warning" role="progressbar" style="width: 55%" aria-valuenow="55" aria-valuemin="0" aria-valuemax="100">Beden UyumsuzluÄŸu (%55)</div>
            <div class="progress-bar bg-info" role="progressbar" style="width: 30%" aria-valuenow="30" aria-valuemin="0" aria-valuemax="100">Stil/Renk BeÄŸenmeme (%30)</div>
            <div class="progress-bar bg-danger" role="progressbar" style="width: 15%" aria-valuenow="15" aria-valuemin="0" aria-valuemax="100">DiÄŸer (%15)</div>
        </div>

        <hr>

        <h6 class="card-title mt-4">ÃœrÃ¼n BazlÄ± Aksiyon Ã–nerileri</h6>
        <div class="accordion" id="reportAccordion">
            <div class="accordion-item">
                <h2 class="accordion-header">
                    <button class="accordion-button" type="button" data-bs-toggle="collapse" data-bs-target="#collapseOne">
                        <strong>ÃœrÃ¼n:</strong> Siyah Chino Pantolon - <strong>Ana Sorun:</strong> KalÄ±p Dar (%72)
                    </button>
                </h2>
                <div id="collapseOne" class="accordion-collapse collapse show" data-bs-parent="#reportAccordion">
                    <div class="accordion-body">
                        <strong>Gemini'nin Ã–nerisi:</strong> MÃ¼ÅŸteriler bu Ã¼rÃ¼nÃ¼n kalÄ±bÄ±nÄ± sÃ¼rekli olarak 'beklenenden dar' veya 'slim fit gibi' olarak tanÄ±mlÄ±yor. Ä°ade oranÄ±nÄ± dÃ¼ÅŸÃ¼rmek iÃ§in Ã¼rÃ¼n aÃ§Ä±klamasÄ±na ÅŸu notun eklenmesi tavsiye edilir: <br>
                        <code>"<strong>Stil Notu:</strong> Bu Ã¼rÃ¼n, vÃ¼cuda oturan bir kesime sahiptir. Daha rahat bir gÃ¶rÃ¼nÃ¼m iÃ§in bir beden bÃ¼yÃ¼k tercih etmenizi Ã¶neririz."</code>
                    </div>
                </div>
            </div>
            <div class="accordion-item">
                <h2 class="accordion-header">
                    <button class="accordion-button collapsed" type="button" data-bs-toggle="collapse" data-bs-target="#collapseTwo">
                        <strong>ÃœrÃ¼n:</strong> Bej Keten GÃ¶mlek - <strong>Ana Sorun:</strong> Renk AlgÄ±sÄ± (%45)
                    </button>
                </h2>
                <div id="collapseTwo" class="accordion-collapse collapse" data-bs-parent="#reportAccordion">
                    <div class="accordion-body">
                         <strong>Gemini'nin Ã–nerisi:</strong> MÃ¼ÅŸterilerin bir kÄ±smÄ±, Ã¼rÃ¼n rengini 'ekranda gÃ¶rÃ¼ndÃ¼ÄŸÃ¼nden daha sarÄ±' olarak belirtmiÅŸ. ÃœrÃ¼n gÃ¶rsellerine, farklÄ± Ä±ÅŸÄ±k koÅŸullarÄ±nda Ã§ekilmiÅŸ stÃ¼dyo ve dÄ±ÅŸ mekan fotoÄŸraflarÄ± eklenmesi, renk algÄ±sÄ± konusundaki beklentiyi daha doÄŸru yÃ¶netebilir.
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>
{% endblock %}
""",
    },

    "static": {
        "css": {
            "style.css": """/* Google Font */
body {
    font-family: 'Montserrat', sans-serif;
    background-color: #f8f9fa;
}

/* Navbar */
.navbar-brand {
    color: #6f42c1 !important; /* Mor renk */
}

/* Ana Sayfa Stil Formu */
.styled-form-container {
    border: none;
    border-radius: 15px;
    box-shadow: 0 8px 30px rgba(0,0,0,0.05);
    background: linear-gradient(145deg, #ffffff, #e6e6e6);
}

#image-upload {
    cursor: pointer;
}

.btn-primary {
    background-color: #6f42c1;
    border-color: #6f42c1;
    transition: all 0.3s ease;
}

.btn-primary:hover {
    background-color: #59359a;
    border-color: #59359a;
    transform: translateY(-2px);
    box-shadow: 0 4px 15px rgba(111, 66, 193, 0.3);
}

/* SonuÃ§ KartlarÄ± */
.result-card {
    border: none;
    border-radius: 10px;
    box-shadow: 0 4px 15px rgba(0,0,0,0.08);
    transition: transform 0.3s ease, box-shadow 0.3s ease;
}

.result-card:hover {
    transform: translateY(-5px);
    box-shadow: 0 8px 25px rgba(0,0,0,0.12);
}

.result-card img {
    border-top-left-radius: 10px;
    border-top-right-radius: 10px;
    aspect-ratio: 1 / 1;
    object-fit: cover;
}

.style-advice-card {
    background-color: #f0ebf9;
    border: 1px solid #dcd1f0;
}

/* Chatbot Modal */
.chat-window {
    height: 300px;
    border: 1px solid #ddd;
    border-radius: 5px;
    padding: 10px;
    overflow-y: auto;
    display: flex;
    flex-direction: column;
}

.chat-message {
    padding: 8px 12px;
    border-radius: 15px;
    margin-bottom: 10px;
    max-width: 80%;
    word-wrap: break-word;
}

.chat-message.user {
    background-color: #6f42c1;
    color: white;
    align-self: flex-end;
    border-bottom-right-radius: 3px;
}

.chat-message.bot {
    background-color: #e9ecef;
    color: #333;
    align-self: flex-start;
    border-bottom-left-radius: 3px;
}"""
        },
        "js": {
            "main.js": """document.addEventListener('DOMContentLoaded', () => {

    // --- Stil Analisti (StyleSync) FonksiyonlarÄ± ---
    const styleForm = document.getElementById('style-form');
    if (styleForm) {
        styleForm.addEventListener('submit', async (e) => {
            e.preventDefault();
            const formData = new FormData(styleForm);
            const spinner = document.getElementById('loading-spinner');
            const resultsContainer = document.getElementById('results-container');

            spinner.classList.remove('d-none');
            resultsContainer.innerHTML = '';

            try {
                const response = await fetch('/api/analyze-style', {
                    method: 'POST',
                    body: formData,
                });

                const data = await response.json();

                if (!response.ok) {
                    throw new Error(data.error || 'Bir hata oluÅŸtu.');
                }

                displayResults(data);

            } catch (error) {
                resultsContainer.innerHTML = `<div class="alert alert-danger">${error.message}</div>`;
            } finally {
                spinner.classList.add('d-none');
            }
        });
    }

    function displayResults(data) {
        const resultsContainer = document.getElementById('results-container');
        let productsHTML = '';

        data.matched_products.forEach(product => {
            productsHTML += `
                <div class="col-md-4 mb-4">
                    <div class="card result-card h-100">
                        <img src="${product.image}" class="card-img-top" alt="${product.name}">
                        <div class="card-body d-flex flex-column">
                            <h5 class="card-title">${product.name}</h5>
                            <p class="card-text text-muted flex-grow-1">Stil Etiketleri: ${product.style_tags.join(', ')}</p>
                            <div class="d-flex justify-content-between align-items-center">
                                <span class="fw-bold fs-5">${product.price}</span>
                                <a href="#" class="btn btn-sm btn-outline-primary">Ä°ncele</a>
                            </div>
                        </div>
                    </div>
                </div>
            `;
        });

        resultsContainer.innerHTML = `
            <div class="mb-4">
                <div class="card style-advice-card">
                     <div class="card-body">
                        <h5 class="card-title">âœ¨ Gemini Stil Ã–nerisi</h5>
                        <p class="card-text">${data.style_advice.replace(/\\n/g, '<br>')}</p>
                        <small class="text-muted">Bu Ã¶neri, <strong>${data.original_item.item_description}</strong> parÃ§anÄ±za gÃ¶re Ã¶zel olarak oluÅŸturuldu.</small>
                     </div>
                </div>
            </div>
            <hr class="my-5">
            <h3 class="text-center mb-4">Uyumlu ÃœrÃ¼nler</h3>
            <div class="row">
                ${productsHTML}
            </div>
        `;
    }

    // --- AkÄ±llÄ± Ä°ade AsistanÄ± (ReturnLogic) FonksiyonlarÄ± ---
    const returnModal = document.getElementById('return-chatbot-modal');
    if (returnModal) {
        const chatWindow = document.getElementById('chat-window');
        const chatInput = document.getElementById('chat-input');
        const chatSendBtn = document.getElementById('chat-send-btn');
        let productName = '';

        // Modal aÃ§Ä±ldÄ±ÄŸÄ±nda chat'i temizle ve baÅŸlangÄ±Ã§ mesajÄ±nÄ± ekle
        returnModal.addEventListener('show.bs.modal', (event) => {
            productName = event.relatedTarget.getAttribute('data-product-name');
            chatWindow.innerHTML = '';
            addMessageToChat(`Merhaba! \\"${productName}\\" Ã¼rÃ¼nÃ¼nÃ¼ iade etme sebebinizi kÄ±saca Ã¶ÄŸrenebilir miyim?`, 'bot');
        });
        
        // GÃ¶nder butonuna tÄ±klandÄ±ÄŸÄ±nda
        chatSendBtn.addEventListener('click', sendChatMessage);
        
        // Enter'a basÄ±ldÄ±ÄŸÄ±nda
        chatInput.addEventListener('keypress', (e) => {
            if (e.key === 'Enter') {
                sendChatMessage();
            }
        });

        async function sendChatMessage() {
            const message = chatInput.value.trim();
            if (!message) return;
            
            addMessageToChat(message, 'user');
            chatInput.value = '';
            
            document.getElementById('chat-typing-indicator').classList.remove('d-none');
            
            try {
                const response = await fetch('/api/chat', {
                    method: 'POST',
                    headers: {'Content-Type': 'application/json'},
                    body: JSON.stringify({ message: message, product: productName })
                });
                const data = await response.json();
                addMessageToChat(data.reply, 'bot');
            } catch (error) {
                addMessageToChat('ÃœzgÃ¼nÃ¼m, ÅŸu anda size yardÄ±mcÄ± olamÄ±yorum. LÃ¼tfen daha sonra tekrar deneyin.', 'bot');
            } finally {
                document.getElementById('chat-typing-indicator').classList.add('d-none');
            }
        }
        
        function addMessageToChat(message, sender) {
            // [STIL_ANALISTI_LINK] gibi Ã¶zel metinleri butona Ã§evir
            if (message.includes('[STIL_ANALISTI_LINK]')) {
                message = message.replace(
                    '[STIL_ANALISTI_LINK]', 
                    '<br><a href="/" class="btn btn-success btn-sm mt-2">Stil Analistini Dene</a>'
                );
            }

            const messageElement = document.createElement('div');
            messageElement.classList.add('chat-message', sender);
            messageElement.innerHTML = message; // innerHTML kullanÄ±yoruz Ã§Ã¼nkÃ¼ link butonu ekleyebiliriz.
            chatWindow.appendChild(messageElement);
            chatWindow.scrollTop = chatWindow.scrollHeight; // Otomatik aÅŸaÄŸÄ± kaydÄ±r
        }
    }
});"""
        },
        "img": {
            # Bu klasÃ¶r boÅŸ oluÅŸturulacak, siz resimlerinizi ekleyeceksiniz.
        }
    }
}

def create_project_structure(base_path, structure):
    """
    Verilen sÃ¶zlÃ¼k yapÄ±sÄ±na gÃ¶re dosya ve klasÃ¶rleri Ã¶zyineli olarak oluÅŸturur.
    """
    for name, content in structure.items():
        path = os.path.join(base_path, name)
        if isinstance(content, dict):
            # EÄŸer iÃ§erik bir sÃ¶zlÃ¼k ise, bu bir klasÃ¶rdÃ¼r
            os.makedirs(path, exist_ok=True)
            print(f"KlasÃ¶r oluÅŸturuldu: {path}")
            create_project_structure(path, content)
        else:
            # EÄŸer iÃ§erik bir string ise, bu bir dosyadÄ±r
            try:
                with open(path, 'w', encoding='utf-8') as f:
                    f.write(content)
                print(f"Dosya oluÅŸturuldu: {path}")
            except Exception as e:
                print(f"HATA: {path} dosyasÄ± oluÅŸturulamadÄ± - {e}")

if __name__ == "__main__":
    current_directory = os.getcwd()
    print(f"Proje dosyalarÄ± ÅŸu konuma oluÅŸturuluyor: {current_directory}")
    create_project_structure(current_directory, PROJECT_STRUCTURE)
    print("\nProje yapÄ±sÄ± baÅŸarÄ±yla oluÅŸturuldu!")
    print("\nSONRAKÄ° ADIMLAR:")
    print("1. 'static/img/' klasÃ¶rÃ¼ne kendi Ã¼rÃ¼n resimlerinizi ekleyin (Ã¶rn: gomlek1.jpg).")
    print("2. '.env' dosyasÄ±nÄ± aÃ§Ä±p Gemini API anahtarÄ±nÄ±zÄ± girin.")
    print("3. Terminalde sanal ortamÄ± kurup (`python -m venv venv`) aktif edin.")
    print("4. Gerekli kÃ¼tÃ¼phaneleri yÃ¼kleyin (`pip install -r requirements.txt`).")
    print("5. Projeyi baÅŸlatÄ±n (`flask run`).")